// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates match statistics including total points scored, service winners, and fault percentages.
 *
 * - generateMatchStatistics - A function that handles the generation of match statistics.
 * - MatchStatisticsInput - The input type for the generateMatchStatistics function.
 * - MatchStatisticsOutput - The return type for the generateMatchStatistics function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const MatchStatisticsInputSchema = z.object({
  player1Name: z.string().describe('Name of player 1'),
  player2Name: z.string().describe('Name of player 2'),
  player1Points: z.number().describe('Total points scored by player 1'),
  player2Points: z.number().describe('Total points scored by player 2'),
  player1ServiceWinners: z.number().describe('Number of service winners by player 1'),
  player2ServiceWinners: z.number().describe('Number of service winners by player 2'),
  player1Faults: z.number().describe('Number of faults by player 1'),
  player2Faults: z.number().describe('Number of faults by player 2'),
});
export type MatchStatisticsInput = z.infer<typeof MatchStatisticsInputSchema>;

const MatchStatisticsOutputSchema = z.object({
  summary: z.string().describe('A summary of the match statistics, including key performance indicators for each player.'),
});
export type MatchStatisticsOutput = z.infer<typeof MatchStatisticsOutputSchema>;

export async function generateMatchStatistics(input: MatchStatisticsInput): Promise<MatchStatisticsOutput> {
  return generateMatchStatisticsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'matchStatisticsPrompt',
  input: {schema: MatchStatisticsInputSchema},
  output: {schema: MatchStatisticsOutputSchema},
  prompt: `Anda adalah seorang ahli statistik bulu tangkis.

  Berdasarkan data pertandingan berikut, buat ringkasan komprehensif dari statistik pertandingan, termasuk indikator kinerja utama untuk setiap pemain.

  Nama Pemain 1: {{{player1Name}}}
  Nama Pemain 2: {{{player2Name}}}
  Poin Pemain 1: {{{player1Points}}}
  Poin Pemain 2: {{{player2Points}}}
  Pemenang Servis Pemain 1: {{{player1ServiceWinners}}}
  Pemenang Servis Pemain 2: {{{player2ServiceWinners}}}
  Kesalahan Pemain 1: {{{player1Faults}}}
  Kesalahan Pemain 2: {{{player2Faults}}}

  Berikan wawasan tentang kekuatan dan kelemahan setiap pemain berdasarkan data.
  Tunjukkan pemain mana yang memiliki kinerja lebih baik berdasarkan metrik utama.
  Ringkasan harus ringkas dan mudah dipahami.
  `,
});

const generateMatchStatisticsFlow = ai.defineFlow(
  {
    name: 'generateMatchStatisticsFlow',
    inputSchema: MatchStatisticsInputSchema,
    outputSchema: MatchStatisticsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
